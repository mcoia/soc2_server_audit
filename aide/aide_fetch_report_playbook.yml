---

# https://aide.github.io/
# https://github.com/aide/aide
# google: simple aide.conf

# Ubuntu: https://www.stephenrlang.com/tag/aide/
# Ubuntu: https://awnix.com/tutorials/2018/10/4/aide-installation
# Ubuntu: https://www.hiroom2.com/2017/06/09/ubuntu-16-04-file-integrity-check-with-aide/
# Ubuntu: https://kifarunix.com/install-and-configure-aide-on-ubuntu-18-04/
# CentOS: https://www.digitalocean.com/community/tutorials/how-to-install-aide-on-a-digitalocean-vps
# 
# Config AIDE:
# https://blog.confirm.ch/simple-file-comparison-with-aide/
# https://www.malasuk.com/linux/advanced-intrusion-detection-environment-aide/
# https://www.sbarjatiya.com/notes_wiki/index.php/Configuring_basic_AIDE_server
# http://lukehinds.com/2018/01/22/tripleo-aide-service.html

# some ignore paths:
# https://www.rfxn.com/data-integrity-aide-for-host-based-intrusion-detection/
# https://awnix.com/tutorials/2018/10/4/aide-installation

# like this basically: 
# yum install aide -y && /usr/sbin/aide --init && cp /var/lib/aide/aide.db.new.gz /var/lib/aide/aide.db.gz && /usr/sbin/aide --check

# NOTE, A REPORT ISN'T GENERATED THE FIRST TIME YOU RUN THIS PLAYBOOK ON A HOST, SINCE REPORTS USE A DIFFING COMPARISON.
#    -- ONCE NEEDED RUN A 3RD TIME ON A CENTOS BOX.
# ansible-playbook aide_fetch_report_playbook.yml -i ../hosts --limit testing
# ansible-playbook aide_fetch_report_playbook.yml -i ../hosts --limit centos
# ansible-playbook aide_fetch_report_playbook.yml -i ../hosts --limit ubuntu
# ansible-playbook aide_fetch_report_playbook.yml -i ../hosts

- hosts: all
  remote_user: "{{ remote_user }}"
  become: true
  become_method: sudo
  vars_files:
    - ../ansible_vars.yml
  tasks:
  - name: register Hostname
    shell: echo {{inventory_hostname | regex_replace('\.','_')}}
    register: this_host

  - name: INSTALL AIDE
    become: yes
    package:
      name: aide
      state: present

## figure out where the aide binary is, and make an ansible variable to it's path
  - stat: path=/usr/sbin/aide
    register: aide_sbin

  - stat: path=/usr/bin/aide
    register: aide_bin

  - debug:
      var: aide_bin

  - debug:
      var: aide_sbin

  - name: Make binary variable
    set_fact:
      aide_exec_path: /usr/bin/aide
    when: aide_bin.stat.exists == true

  - name: Make binary variable
    set_fact:
      aide_exec_path: /usr/sbin/aide
    when: aide_sbin.stat.exists == true

  - debug:
      var: aide_exec_path

  - name: register AIDE Version
    ignore_errors: yes
    become: yes
    shell: "{{ aide_exec_path }} --version &> ~/test.txt && grep -i aide ~/test.txt"
    register: aide_version

  - debug:
      var: aide_version.stdout_lines

  - name: Stripping down to the version number
# Example data: Aide 0.17.4
    shell: echo {{ aide_version.stdout_lines[0] | regex_replace('^[^\s]*\s*(.*)$','\1')  }}
    register: aide_version_number

  - debug:
      var: aide_version_number.stdout_lines[0]

  - name: FIXUP PREV AIDE FILES 1
    ignore_errors: yes
    become: yes
    shell: rm "{{ aide }}"/aide.db.2*
  - name: FIXUP PREV AIDE FILES 2
    ignore_errors: yes
    become: yes
    file: 
      path: "{{ aide }}/aide.conf.autogenerated"
      state: absent
  - name: FIXUP PREV AIDE FILES 3
    ignore_errors: yes
    become: true
    copy:
       remote_src: true
       src: "{{ aide }}/aide.db.new"
       dest: "{{ aide }}/aide.db.{{ date }}"
  - name: FIXUP PREV AIDE FILES 4
    ignore_errors: yes
    become: yes
    file: 
      path: "{{ aide }}/aide.db.new"
      state: absent
  - name: FIXUP PREV AIDE FILES 5
    ignore_errors: yes
    become: yes
    file: 
      path: "{{ aide }}/aide.db"
      state: absent
     
#  - fail:
#      msg: "Check aid_initialized_centos"

  - name: CONFIG BASIC AIDE
    become: true
    copy:
      src: conf.aide
      dest: /etc/aide.conf
      #backup: yes

  - name: GROUP RESULTS ON UBUNTU
    become: true
    lineinfile: "dest=/etc/aide.conf state=present regexp='^#grouped' line='grouped=yes'"
    ignore_errors: yes
    when: ansible_distribution == 'Ubuntu'

  - name: Remove verbose config line
    become: true
    lineinfile: "dest=/etc/aide.conf state=absent regexp='^verbose'"
    when: aide_version_number.stdout_lines[0] > '0.16.9'

  - name: Change grouped to report_grouped
    become: true
    lineinfile: "dest=/etc/aide.conf state=present regexp='^#?grouped' line='report_grouped=no'"
    when: aide_version_number.stdout_lines[0] > '0.16.9'

  - name: Change summarize_changes to report_summarize_changes config line
    become: true
    lineinfile: "dest=/etc/aide.conf state=present regexp='^summarize_changes' line='report_summarize_changes=yes'"
    when: aide_version_number.stdout_lines[0] > '0.16.9'

  - name: INIT AIDE /etc/cron.daily/aide mode=a-x
    become: true
    file: dest=/etc/cron.daily/aide mode=a-x
    when: ansible_distribution == 'Ubuntu'

  - name: INIT AIDE path=/etc/aide mode=a-x state=directory recurse=yes
    become: true
    file: path=/etc/aide mode=a-x state=directory recurse=yes
    when: ansible_distribution == 'Ubuntu'

  - name: Execute AIDE
    become: true
    shell: nice -n19 {{ aide_exec_path }} -i -c /etc/aide.conf

  - name: REMOVE '^database=' LINE
    become: true
    lineinfile: "dest=/etc/aide.conf state=absent regexp='^database='"
   
  - name: ADD 'database=' LINE
    become: true
    lineinfile: "dest=/etc/aide.conf state=present insertbefore='^database' line='database=file:{{ aide }}/aide.db.{{ date }}'"

  - name: CHECK INITIALIZED 
    become: true
    find: 
      path: "{{ aide }}"
      patterns: "aide.db.2*"
    register: ran_before
  - name: RUN AIDE
    become: true
    shell: nice -n19 {{ aide_exec_path }} --compare -c /etc/aide.conf > {{aide_report_file}}
    register: command_result
    ignore_errors: yes
    when: ran_before.matched == 1

  - name: COPY REPORT 1
    become: yes
    fetch: flat=yes src="{{ aide_report_file }}" dest={{ aide_report_local_destination }}/{{ host }}.{{ this_host.stdout_lines | regex_replace('[\[\]"]','') | regex_replace("[']",'') | regex_replace("^u",'') }}.txt
    when: ran_before.matched == 1

  # - name: COPY REPORT 2
    # become: yes
    # shell: cat {{aide_report_file}}
    # register: aide_result
    # when: ran_before.matched == 1

  # - name: COPY REPORT 3
    # become: yes
    # local_action: copy content={{ aide_result.stdout_lines }} dest={{aide_report_local_destination}}/{{ host }}.{{ this_host.stdout_lines | regex_replace('[\[\]"]','') | regex_replace("[']",'') | regex_replace("^u",'') }}.txt
    # when: ran_before.matched == 1

...
